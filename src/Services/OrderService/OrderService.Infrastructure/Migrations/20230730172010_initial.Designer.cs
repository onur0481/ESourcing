// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderService.Infrastructure.Context;

#nullable disable

namespace OrderService.Infrastructure.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    [Migration("20230730172010_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ORDER")
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderService.Domain.Entities.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AuctionID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SellerUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Orders", "ORDER");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AuctionID = "0041ff6a-6f3c-4c05-908c-43c90e2b877d",
                            CreatedDate = new DateTime(2023, 7, 30, 20, 20, 9, 965, DateTimeKind.Local).AddTicks(8964),
                            ProductID = "4f43ef6d-e53d-44a1-a79e-a92f469e9b56",
                            SellerUserName = "test@test.com",
                            TotalPrice = 1000m,
                            UnitPrice = 10m
                        },
                        new
                        {
                            ID = 2,
                            AuctionID = "5b85c4d7-7c61-4f25-9eb3-13c5275a86f8",
                            CreatedDate = new DateTime(2023, 7, 30, 20, 20, 9, 965, DateTimeKind.Local).AddTicks(8980),
                            ProductID = "e0c0436b-6982-49f0-8277-4a73b79c9093",
                            SellerUserName = "test@test.com",
                            TotalPrice = 1000m,
                            UnitPrice = 10m
                        },
                        new
                        {
                            ID = 3,
                            AuctionID = "3dcdc910-5abf-438e-b269-6923236e247d",
                            CreatedDate = new DateTime(2023, 7, 30, 20, 20, 9, 965, DateTimeKind.Local).AddTicks(8984),
                            ProductID = "bc29ed43-c53f-49f3-9a76-e4725a5042d2",
                            SellerUserName = "test@test.com",
                            TotalPrice = 1000m,
                            UnitPrice = 10m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
